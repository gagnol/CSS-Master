import Head from 'next/head'
import dynamic from 'next/dynamic';
import Hover from '../components/Hover';

import { useState } from 'react';
import Circle from '../components/Circle';
import { Box, Grid, Pagination, Stack } from '@mui/material';
import ImagePreview from '../components/ImagePreview';



function Home({ items }) {
  const [photos, setPhotos] = useState(items);
  //pagination
  const [currentPage, setCurrentPage] = useState(1);
  const [exercisesPerPage] = useState(6);

  const indexOfLastExercise = currentPage * exercisesPerPage;
  const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;
  const currentExercises = items.slice(
    indexOfFirstExercise,
    indexOfLastExercise
  );

  const paginate = (event, value) => {
    setCurrentPage(value);
    window.scrollTo({ top: 1800, behavior: 'smooth' });
  };



  return (
    <div >
      <Head>
        <title>CSS Main App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <body>
        <Hover />
      </body>
      <Box component="main" sx={{ flexGrow: 1, p: 3 }} mt="50px" ml="50px">
        <Stack
          direction="row"
          sx={{ gap: { lg: "50px", xs: "50px" } }}
          flexWrap="wrap"
          justifyContent="center"
        >
          {currentExercises.map((preview) => (
            <Grid item md={3} key={photos}>
              <ImagePreview
               sx={{cursor:"pointer"}}
                key={preview.data[0].title}
                nasaPicture={preview.links[0].href}
                title={preview.data[0].title}
                description={preview.data[0].description}
              />

            </Grid>
          ))}
        </Stack>
      </Box>
      <Pagination
        defaultPage={1}
        page={currentPage}
        onChange={paginate}
        size="large"
        shape="rounded"
        showFirstButton showLastButton
        sx={{ background: "#fff", margin: "50px", borderRadius: "8px", paddingLeft: "250px" }}
        count={Math.ceil(items.length / exercisesPerPage)}

      />


    </div>
  )
}
export default dynamic(() => Promise.resolve(Home), { ssr: false });


export async function getStaticProps() {
  const results = await fetch(
    "https://images-api.nasa.gov/search?media_type=image"
  );
  const previews = await results.json();
  const items = await previews.collection.items;
  console.log(items)
  return {
    props: { items },
  };
}